import io
import logging
from docx import Document
from docx.shared import Inches
from docx.enum.text import WD_ALIGN_PARAGRAPH

class DocumentExporter:
    """Handles document export functionality"""
    
    def create_document(self, comparison_result, comparison_params):
        """Create a .docx document from comparison result"""
        try:
            doc = Document()
            
            # Title
            title = doc.add_heading('Wiki Truth - Article Comparison', 0)
            title.alignment = WD_ALIGN_PARAGRAPH.CENTER
            
            # Article information
            doc.add_heading('Article Information', level=1)
            
            info_para = doc.add_paragraph()
            info_para.add_run(f"Article: ").bold = True
            info_para.add_run(comparison_params['article_title'])
            
            lang_para = doc.add_paragraph()
            lang_para.add_run(f"Languages compared: ").bold = True
            lang_para.add_run(', '.join(comparison_params['languages']))
            
            output_para = doc.add_paragraph()
            output_para.add_run(f"Output language: ").bold = True
            output_para.add_run(comparison_params['output_language'])
            
            mode_para = doc.add_paragraph()
            mode_para.add_run(f"Comparison mode: ").bold = True
            mode_para.add_run(comparison_params['mode'].title())
            
            # Add spacing
            doc.add_paragraph()
            
            # Comparison result
            doc.add_heading('Comparison Result', level=1)
            
            # Split the result into paragraphs for better formatting
            paragraphs = comparison_result.split('\n\n')
            for paragraph in paragraphs:
                if paragraph.strip():
                    # Check if it's a heading (starts with #, *, or numbers)
                    if (paragraph.strip().startswith('#') or 
                        paragraph.strip().startswith('*') or 
                        paragraph.strip()[0].isdigit()):
                        
                        # Remove markdown formatting
                        clean_text = paragraph.strip().lstrip('#*0123456789. ')
                        doc.add_heading(clean_text, level=2)
                    else:
                        doc.add_paragraph(paragraph.strip())
            
            # Footer
            doc.add_page_break()
            footer_para = doc.add_paragraph()
            footer_para.add_run("Generated by Wiki Truth").italic = True
            footer_para.add_run(" - Compare Wikipedia articles across languages")
            footer_para.alignment = WD_ALIGN_PARAGRAPH.CENTER
            
            # Save to bytes
            doc_io = io.BytesIO()
            doc.save(doc_io)
            doc_io.seek(0)
            
            return doc_io.getvalue()
            
        except Exception as e:
            logging.error(f"Error creating document: {e}")
            raise Exception(f"Failed to create document: {str(e)}")
